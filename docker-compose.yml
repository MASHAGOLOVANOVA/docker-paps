version: '2.1'

name: spams-container
services:
  web:
    build:
        context: ./mvp-2-spms
        dockerfile: build.Dockerfile
    container_name: web-spams-container
    ports:
      - "8080:8080" 
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - DB_CONNECTION_STRING=root:root@tcp(mysql-container:3306)/student_project_management?parseTime=true
  frontend:
    build:
      context: ./MVP-2-SPMS-front-side 
      dockerfile: Dockerfile
    container_name: front-spams-container
    ports:
      - "3000:3000"  
    environment:
      - CHOKIDAR_USEPOLLING=true 
      - REACT_APP_SERVER_ADDR=http://web:8080
  mysql:
    image: mysql:latest
    container_name: mysql-container
    volumes:
      - SPAMSDB:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: student_project_management
      MYSQL_USER: root
      MYSQL_PASSWORD: root
    ports: 
      - 3307:3306
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
  bot:
       build:
         context: ./telegram-bot  
         dockerfile: Dockerfile
       container_name: telegram-bot-container
       restart: always  
  migrate:
    image: mysql:latest
    container_name: migrate-container
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./mvp-2-spms/database/migrations:/migrations
    command: >
      sh -c "for file in /migrations/*.sql; do
        mysql -h mysql-container -u root -proot student_project_management < \$file;
      done"
volumes:
  SPAMSDB:    
    external: true
